#!/usr/bin/env python3
"""
Script ƒë·ªÉ t·∫°o c√°c database c·∫ßn thi·∫øt cho FastAPI monorepo
"""
import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT

def create_database(db_name: str, host: str = "localhost", port: int = 5433, 
                   user: str = "postgres", password: str = "123456") -> None:
    """T·∫°o database n·∫øu ch∆∞a t·ªìn t·∫°i"""
    try:
        # K·∫øt n·ªëi t·ªõi PostgreSQL server (kh√¥ng ch·ªâ ƒë·ªãnh database c·ª• th·ªÉ)
        conn = psycopg2.connect(
            host=host,
            port=port,
            user=user,
            password=password,
            database="postgres"  # K·∫øt n·ªëi t·ªõi database m·∫∑c ƒë·ªãnh
        )
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        
        cursor = conn.cursor()
        
        # Ki·ªÉm tra xem database ƒë√£ t·ªìn t·∫°i ch∆∞a
        cursor.execute("SELECT 1 FROM pg_catalog.pg_database WHERE datname = %s", (db_name,))
        exists = cursor.fetchone()
        
        if not exists:
            cursor.execute(f'CREATE DATABASE "{db_name}"')
            print(f"‚úÖ Database '{db_name}' ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")
        else:
            print(f"‚ÑπÔ∏è  Database '{db_name}' ƒë√£ t·ªìn t·∫°i.")
            
        cursor.close()
        conn.close()
        
    except psycopg2.Error as e:
        print(f"‚ùå L·ªói khi t·∫°o database '{db_name}': {e}")
    except Exception as e:
        print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {e}")

if __name__ == "__main__":
    print("üöÄ ƒêang t·∫°o databases cho FastAPI monorepo...")
    
    # T·∫°o database cho service auth
    create_database("authdb")
    
    # T·∫°o database cho service articles (n·∫øu c·∫ßn)
    create_database("articlesdb")
    
    # T·∫°o database cho service user
    create_database("userdb")
    
    # T·∫°o database cho service roles
    create_database("rolesdb")
    
    # T·∫°o database cho service products
    create_database("productsdb")
    
    print("‚ú® Ho√†n th√†nh!")
